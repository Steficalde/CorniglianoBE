// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// Entit√†

model Award {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?
  quantity    Int         @default(0)
  users       AwardUser[]

  @@map("awards")
}

model Purchase {
  id          Int      @id @default(autoincrement())
  purchasedAt DateTime @default(now())
  points      Int

  shopId Int
  shop   Shop @relation(fields: [shopId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("purchases")
}

model Shop {
  id         Int        @id
  user       User       @relation(fields: [id], references: [id])
  isActive   Boolean    @default(true)
  address    String?
  googleMaps String?
  purchases  Purchase[]

  @@map("shops")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  hash  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  awards    AwardUser[]
  purchases Purchase[]
  Shop      Shop[]

  @@map("users")
}

// tabelle Many to Many

model AwardUser {
  id          Int      @id @default(autoincrement())
  redeemed_at DateTime @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  awardId Int
  award   Award @relation(fields: [awardId], references: [id])

  @@map("award_user")
}
